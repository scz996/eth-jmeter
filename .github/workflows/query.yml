name: query

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment
        required: true
        options:
          - fantom_testnet
          - axon_alphanet
          - testnet
          - alphanet
      jmeterJmx:
        type: choice
        description: Make a choice of jmx
        required: true
        options:
          - getBalance.jmx
          - getBlockByNumber.jmx
          - ethCall.jmx
      mnemonic:
        type: string
        description: Mnemonic
        required: true
        default: "test test test test test test test test test test test junk"

jobs:
  build:
    runs-on: ubuntu-latest
#    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set rpcUrl
        run: |
          case "${{ github.event.inputs.env }}" in
            "fantom_testnet")
              echo "rpcUrl=https://rpc.testnet.fantom.network" >> $GITHUB_ENV
              echo "to=0x6Fc1E7631D24b6173d975a892ba5563E8C04CB9f" >> $GITHUB_ENV
              ;;
            "axon_alphanet")
              echo "rpcUrl=https://rpc-alphanet-axon.ckbapp.dev" >> $GITHUB_ENV
              echo "to=0x64a8ef7A52Fc82Caf1676072E0670a17002c1840" >> $GITHUB_ENV
              ;;
            "testnet")
              echo "rpcUrl=https://v1.testnet.godwoken.io/rpc" >> $GITHUB_ENV
              echo "to=0x6701bf03c0483c844d231246bbbbd6e1851c7ab1" >> $GITHUB_ENV
              ;;
            "alphanet")
              echo "rpcUrl=https://godwoken-alphanet-v1.ckbapp.dev" >> $GITHUB_ENV
              echo "to=0x93b2043d4aC9b2565F44A86682ae12a01400FB33" >> $GITHUB_ENV
              ;;
            *)
              echo "Invalid environment specified."
              exit 1
              ;;
          esac

      - name: Build with Maven
        run: mvn clean package --file pom.xml -q

      - name: jmeter run
        run: |
          echo "rpcUrl: ${{ env.rpcUrl }}"
          sed -i 's|<stringProp name="Argument.value">rpcUrlValue</stringProp>|<stringProp name="Argument.value">${{ env.rpcUrl }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          
          if [ "${{ github.event.inputs.jmeterJmx }}" = "getBalance.jmx" ]; then
            sed -i 's|<stringProp name="Argument.value">mnemonicValue</stringProp>|<stringProp name="Argument.value">${{ github.event.inputs.mnemonic }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          fi
          
          if [ "${{ github.event.inputs.jmeterJmx }}" = "ethCall.jmx" ]; then
            sed -i 's|<stringProp name="Argument.value">toAddress</stringProp>|<stringProp name="Argument.value">${{ env.to }}</stringProp>|g' src/test/jmeter/${{ github.event.inputs.jmeterJmx }}
          fi
          mvn jmeter:jmeter@configuration -DjmeterTest=${{ github.event.inputs.jmeterJmx }}
